# Book-Author Assignment - SQL Table Creation, Insertion, and Queries

**Subject:** Introduction to Databases (CSE-3151)  
**Objective:** Practice table creation with constraints, relational joins, subqueries, and updates.

---

## **1. Table Creation**

### **BOOK Table**
```sql
CREATE TABLE BOOK (
    ISBN VARCHAR2(4) PRIMARY KEY CHECK (ISBN LIKE 'I%'),
    TITLE VARCHAR2(50) NOT NULL,
    PRICE NUMBER CHECK (PRICE > 0),
    YEAR NUMBER NOT NULL
);
```

### **AUTHOR Table**
```sql
CREATE TABLE AUTHOR (
    AID VARCHAR2(5) PRIMARY KEY CHECK (AID LIKE 'A%'),
    NAME VARCHAR2(50) NOT NULL,
    CITY VARCHAR2(20) CHECK (CITY IN ('DELHI', 'MUMBAI', 'KOLKATA', 'CHENNAI'))
);
```

### **WRITTEN_BY Table**
```sql
CREATE TABLE WRITTEN_BY (
    ISBN VARCHAR2(4),
    AID VARCHAR2(5),
    PRIMARY KEY (ISBN, AID),
    FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN),
    FOREIGN KEY (AID) REFERENCES AUTHOR(AID)
);
```

---

## **2. Data Insertion**

### **BOOK**
```sql
INSERT ALL
INTO BOOK VALUES('I001', 'IDB', 600.50, 2017)
INTO BOOK VALUES('I002', 'DOS', 550.00, 2018)
INTO BOOK VALUES('I003', 'ADA', 500.50, 2017)
INTO BOOK VALUES('I004', 'USP', 750.00, 2018)
SELECT * FROM dual;
```

### **AUTHOR**
```sql
INSERT ALL
INTO AUTHOR VALUES('A0001', 'H.F. KORTH', 'MUMBAI')
INTO AUTHOR VALUES('A0002', 'S.SUDARSHAN', 'DELHI')
INTO AUTHOR VALUES('A0003', 'P. GALVIN', 'MUMBAI')
INTO AUTHOR VALUES('A0004', 'S. SHARMA', 'CHENNAI')
SELECT * FROM dual;
```

### **WRITTEN_BY**
```sql
INSERT ALL
INTO WRITTEN_BY VALUES('I001', 'A0001')
INTO WRITTEN_BY VALUES('I001', 'A0003')
INTO WRITTEN_BY VALUES('I001', 'A0002')
INTO WRITTEN_BY VALUES('I004', 'A0003')
INTO WRITTEN_BY VALUES('I003', 'A0004')
SELECT * FROM dual;
```

---

## **3. Display name and city of authors who have written DOS or ADA (using subquery)**
```sql
SELECT NAME, CITY FROM AUTHOR
WHERE AID IN (
    SELECT AID FROM WRITTEN_BY
    WHERE ISBN IN (
        SELECT ISBN FROM BOOK
        WHERE TITLE IN ('DOS', 'ADA')
    )
);
```

---

## **4. Display ISBN and title of the book having highest price**
```sql
SELECT ISBN, TITLE FROM BOOK
WHERE PRICE = (SELECT MAX(PRICE) FROM BOOK);
```

---

## **5. Display total number of authors city wise**
```sql
SELECT CITY, COUNT(*) AS TOTAL_AUTHORS
FROM AUTHOR
GROUP BY CITY;
```

---

## **6. Display author name and title of books written by author whose name ends with 'N'**
```sql
SELECT A.NAME, B.TITLE
FROM AUTHOR A
JOIN WRITTEN_BY W ON A.AID = W.AID
JOIN BOOK B ON W.ISBN = B.ISBN
WHERE A.NAME LIKE '%N';
```

---

## **7. Change price of all books by a fall of 25%**
```sql
UPDATE BOOK
SET PRICE = PRICE * 0.75;
```

---

## **End of Assignment**
